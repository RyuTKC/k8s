# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: pv-gitlab-minio
# spec:
#   capacity:
#     storage: 10Gi
#   # volumeMode: FIlesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   claimRef:
#     namespace: gitlab-helm
#     name: gitlab-helm-minio
#   storageClassName: cfs-gitlab-minio
#   csi:
#    driver: rook-ceph.cephfs.csi.ceph.com
#    controllerExpandSecretRef:
#      namespace: rook-ceph
#      name: rook-csi-cephfs-provisioner
#    readOnly: false
#    volumeAttributes:
#      clusterID: rook-ceph
    # volumeHandle: gitlab-minio  # make sure it's a unique id in the cluster
  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: kubernetes.io/hostname
  #             operator: In
  #             values:
  #               - node1

# ---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-gitlab-prometheus
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: gitlab-helm
    name: gitlab-helm-prometheus-server
  storageClassName: cfs-gitlab-prometheus
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com
    controllerExpandSecretRef:
      namespace: rook-ceph
      name: rook-csi-cephfs-provisioner
    nodeStageSecretRef:
      name: rook-csi-cephfs-node
      namespace: rook-ceph
    readOnly: false
    volumeAttributes:
      clusterID: rook-ceph
      fsName: ceph-fs
      pool: ceph-fs-data0
    volumeHandle: gitlab-prometheus  # make sure it's a unique id in the cluster
  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: kubernetes.io/hostname
  #             operator: In
  #             values:
  #               - node1

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-gitlab-redis
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: gitlab-helm
    name: redis-data-gitlab-helm-redis-master-0
  storageClassName: cfs-gitlab-redis
  # mountOptions:
  #   - dir_mode=0777
  #   - file_mode=0777
  #   - uid=999
  #   - gid=999
  #   - vers=2.0
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com
    controllerExpandSecretRef:
      namespace: rook-ceph
      name: rook-csi-cephfs-provisioner
    nodeStageSecretRef:
      name: rook-csi-cephfs-node
      namespace: rook-ceph
    readOnly: false
    volumeAttributes:
      clusterID: rook-ceph
      fsName: ceph-fs
      pool: ceph-fs-data0
    volumeHandle: gitlab-redis  # make sure it's a unique id in the cluster

  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: kubernetes.io/hostname
  #             operator: In
  #             values:
  #               - node1

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-gitlab-gitaly
spec:
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: gitlab-helm
    name: repo-data-gitlab-helm-gitaly-0
  storageClassName: cfs-gitlab-gitaly
  # mountOptions:
  #   - dir_mode=0777
  #   - file_mode=0777
  #   - uid=999
  #   - gid=999
  #   - vers=2.0
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com
    controllerExpandSecretRef:
      namespace: rook-ceph
      name: rook-csi-cephfs-provisioner
    nodeStageSecretRef:
      name: rook-csi-cephfs-node
      namespace: rook-ceph
    readOnly: false
    volumeAttributes:
      clusterID: rook-ceph
      fsName: ceph-fs
      pool: ceph-fs-data0
    volumeHandle: gitlab-gitaly  # make sure it's a unique id in the cluster

  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: kubernetes.io/hostname
  #             operator: In
  #             values:
  #               - node1
